<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Inventive AI</title>
    <style>
        /* Global settings */
        body {
            margin: 0;
            padding: 0;
            background-color: #000; /* Black background */
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            height: 100vh;
            overflow: hidden;
            font-family: Arial, sans-serif;
            color: #00ff00; /* Neon green */
        }

        /* Header */
        h1 {
            font-size: 3rem;
            color: #00ff00; /* Neon green */
            text-shadow: 
                0 0 5px #00ff00, 
                0 0 10px #00ff00, 
                0 0 20px #00ff00, 
                0 0 40px #00ff00, 
                0 0 60px #00ff00; /* Neon glow effect */
            margin-bottom: 20px;
            text-transform: uppercase;
            animation: flicker 2s infinite;
        }

        @keyframes flicker {
            0%, 18%, 22%, 25%, 53%, 57%, 100% {
                opacity: 1;
                text-shadow: 
                    0 0 5px #00ff00, 
                    0 0 10px #00ff00, 
                    0 0 20px #00ff00, 
                    0 0 40px #00ff00, 
                    0 0 60px #00ff00;
            }
            20%, 24%, 55% {
                opacity: 0.9;
                text-shadow: 
                    0 0 2px #00ff00, 
                    0 0 4px #00ff00, 
                    0 0 8px #00ff00;
            }
        }

        /* Silhouette Container */
        .silhouette-container {
            position: relative;
            width: 200px;
            height: 300px;
            display: flex;
            justify-content: center;
            align-items: flex-end;
        }

        /* Silhouette (Head and Shoulders) */
        .silhouette {
            position: absolute;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .head {
            width: 80px;
            height: 80px;
            background: black;
            border: 4px solid #00ff00;
            border-radius: 50%;
            box-shadow: 0 0 15px #00ff00, 0 0 30px #00ff00;
        }

        .neck {
            width: 20px;
            height: 30px;
            background: black;
            border: 4px solid #00ff00;
            border-radius: 3px;
            margin-top: -5px;
            box-shadow: 0 0 15px #00ff00, 0 0 30px #00ff00;
        }

        .shoulders {
            width: 120px;
            height: 40px;
            background: black;
            border: 4px solid #00ff00;
            border-radius: 50% 50% 0 0;
            margin-top: -5px;
            box-shadow: 0 0 15px #00ff00, 0 0 30px #00ff00;
        }

        /* Input Container */
        .input-container {
            margin-top: 50px;
            padding: 20px;
            display: flex;
            gap: 10px;
            justify-content: center;
        }

        .input-container input {
            width: 300px;
            padding: 10px;
            font-size: 1rem;
            color: #00ff00;
            background: #222;
            border: 2px solid #00ff00;
            border-radius: 5px;
            outline: none;
            box-shadow: 0 0 10px #00ff00;
        }

        .input-container button {
            padding: 10px 20px;
            font-size: 1rem;
            color: black;
            background-color: #00ff00;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            box-shadow: 0 0 10px #00ff00;
        }

        .input-container button:hover {
            background-color: #008000;
        }

        /* Response Container */
        #responseContainer {
            margin-top: 20px;
            color: #00ff00;
            font-size: 1rem;
            max-width: 600px;
            text-align: center;
            font-family: 'Courier New', monospace;
            white-space: pre-wrap;
        }
    </style>
</head>
<body>
    <header>
        <h1>Inventive AI</h1>
    </header>
    <main>
        <!-- Silhouette -->
        <div class="silhouette-container">
            <div class="silhouette">
                <div class="head"></div>
                <div class="neck"></div>
                <div class="shoulders"></div>
            </div>
        </div>

        <!-- Chat Section -->
        <div class="input-container">
            <input type="text" id="userInput" placeholder="Ask your question..." />
            <button id="sendButton">Send</button>
        </div>
        <div id="responseContainer"></div>
    </main>
    <script>
        // Chat interaction
        const inputField = document.querySelector('#userInput');
        const sendButton = document.querySelector('#sendButton');
        const responseContainer = document.querySelector('#responseContainer');

        const getResponse = async (query) => {
            const simulatedResponses = [
                "This is a simulated AI response.",
                "I'm thinking... please wait.",
                "Here is a simulated answer!",
                "Your question has been processed.",
                "This is how the AI would respond!"
            ];
            return simulatedResponses[Math.floor(Math.random() * simulatedResponses.length)];
        };

        const typeResponse = (response) => {
            const responseElement = document.createElement('p');
            responseContainer.innerHTML = ''; // Clear previous response
            responseContainer.appendChild(responseElement);

            let index = 0;
            const typingEffect = setInterval(() => {
                if (index < response.length) {
                    responseElement.textContent += response[index];
                    index++;
                } else {
                    clearInterval(typingEffect);
                }
            }, 50);
        };

        sendButton.addEventListener('click', async () => {
            const userQuery = inputField.value;

            if (userQuery.trim() !== '') {
                const response = await getResponse(userQuery);
                typeResponse(response);
                inputField.value = ''; // Clear input
            }
        });
    </script>
</body>
</html>
